const express = require('express');
const multer = require('multer');
const auth = require('../middleware/auth');
const OpenAI = require('openai');

const router = express.Router();
const upload = multer({ storage: multer.memoryStorage() });

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

const SUPPORTED_SIZES = ['1024x1024', '1024x1792', '1792x1024'];

// POST /api/lego-fy
router.post('/', auth, upload.single('image'), async (req, res) => {
  if (!req.file) {
    return res.status(400).json({ message: 'No image uploaded' });
  }
  // Compose prompt
  const instructions = req.body.instructions || '';
  const prompt = `Create a LEGO-style portrait of this person. ${instructions}`;

  // Allow user to specify size, default to '1024x1024'
  let size = req.body.size || '1024x1024';
  if (!SUPPORTED_SIZES.includes(size)) {
    size = '1024x1024';
  }

  try {
    // OpenAI DALLÂ·E does not support direct image uploads as input (as of 2024-06),
    // so we use the prompt only. For a real reference image, use Replicate or similar.
    // Here, we generate a LEGO-style image based on the prompt.
    const dalleRes = await openai.images.generate({
      prompt,
      n: 1,
      size,
      model: 'dall-e-3',
    });
    const legoImageUrl = dalleRes.data[0]?.url;
    if (!legoImageUrl) throw new Error('No image generated');
    return res.json({ legoImageUrl, message: 'LEGO-fied image generated by AI.' });
  } catch (err) {
    return res.status(500).json({ message: 'Failed to generate LEGO-fied image', error: err.message });
  }
});

module.exports = router; 